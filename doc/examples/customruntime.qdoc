/****************************************************************************
**
** Copyright (C) 2019 Luxoft Sweden AB
** Contact: https://www.qt.io/licensing/
**
** This file is part of the QmlLive tool.
**
** $QT_BEGIN_LICENSE:GPL-QTAS$
** Commercial License Usage
** Licensees holding valid commercial Qt Automotive Suite licenses may use
** this file in accordance with the commercial license agreement provided
** with the Software or, alternatively, in accordance with the terms
** contained in a written agreement between you and The Qt Company.  For
** licensing terms and conditions see https://www.qt.io/terms-conditions.
** For further information use the contact form at https://www.qt.io/contact-us.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License version 3 or (at your option) any later version
** approved by the KDE Free Qt Foundation. The licenses are as published by
** the Free Software Foundation and appearing in the file LICENSE.GPL3
** included in the packaging of this file. Please review the following
** information to ensure the GNU General Public License requirements will
** be met: https://www.gnu.org/licenses/gpl-3.0.html.
**
** $QT_END_LICENSE$
**
** SPDX-License-Identifier: GPL-3.0
**
****************************************************************************/
/*!
\example customruntime
\title Custom Runtime Example

\brief Demonstrates how to create a Custom QmlLive Runtime

\image customruntime-example.png Screenshot of the Custom QmlLive Runtime

Creating a custom runtime with QmlLive features allows you to use your QML
view setup, combined with additional C++ code and the QmlLive system.

Start with the \l LiveNodeEngine class. We need to modify this class to be
able to receive workspace changes and active document updates. By default,
the IPC listens to port 10234.

The code snippet below shows a minimal custom QmlLive runtime:

\snippet customruntime/main.cpp 0

To specify project depedencies on platforms that support \c pkg-config,
add the following line to your project file. This is assuming QmlLive is
installed on your build host:

\code
CONFIG += link_pkgconfig
PKGCONFIG += qmllive
\endcode

In case if your system doesn't support \c pkg-config, to compile everything
directly into your application, include file \c{$(QMLLIVEPROJECT)/src/src.pri}
by adding the line into your project file:

\code
include(src.pri)
\endcode
*/
