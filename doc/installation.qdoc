/****************************************************************************
**
** Copyright (C) 2019 Luxoft Sweden AB
** Copyright (C) 2018 Pelagicore AG
** Contact: https://www.qt.io/licensing/
**
** This file is part of the QML Live tool.
**
** $QT_BEGIN_LICENSE:GPL-QTAS$
** Commercial License Usage
** Licensees holding valid commercial Qt Automotive Suite licenses may use
** this file in accordance with the commercial license agreement provided
** with the Software or, alternatively, in accordance with the terms
** contained in a written agreement between you and The Qt Company.  For
** licensing terms and conditions see https://www.qt.io/terms-conditions.
** For further information use the contact form at https://www.qt.io/contact-us.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License version 3 or (at your option) any later version
** approved by the KDE Free Qt Foundation. The licenses are as published by
** the Free Software Foundation and appearing in the file LICENSE.GPL3
** included in the packaging of this file. Please review the following
** information to ensure the GNU General Public License requirements will
** be met: https://www.gnu.org/licenses/gpl-3.0.html.
**
** $QT_END_LICENSE$
**
** SPDX-License-Identifier: GPL-3.0
**
****************************************************************************/

/*!

\page qmllive-installation.html
\title Installation

\section1 Prerequisites

\list
    \li Windows, Linux or macOS
    \li Qt5.4 or higher
\endlist

\section1 Get the Source Code

You can install QML Live via the Qt Installer with a valid license for
Qt Automotive Suite. Alternatively, you can also obtain the source code from
\l{https://code.qt.io/cgit/qt-apps/qmllive.git/}.

\section1 Build for Desktop

QML Live uses qmake for its build system. The basic build steps are:

\code
    qmake
    make
\endcode

To start QML Live Bench directly from the build directory, run
\c{./bin/qmllivebench}. Optionally, you can also install QML Live Bench with
the following command:

\code
    make install
\endcode


\section1 Build for Device

If you want to have live reloading enabled on the target device, use the
following command:

\code
    # using qmake from cross compiler toolchain
    qmake "CONFIG+=skip-bench skip-examples static-link-runtime"
    make
\endcode

You need to cross-compile QML Live and copy the \c{./bin/qmlliveruntime} binary
onto the target.

Optionally, you can package QML Live with the following command:

\code
    make install INSTALL_ROOT=...
\endcode


\section1 Build Documentation

To build the documentation only, run the following commands:

\code
    qmake CONFIG+=force_independent
    make docs
\endcode

The documentation is available at: \tt{doc/qmllive/index.html}.


\section1 Build Options

The following options can be added to the qmake \c CONFIG variable:

\table
\header
    \li Option
    \li Description

\row
    \li skip-bench
    \li Do not build \l{QML Live Bench}

\row
    \li skip-examples
    \li Do not build examples

\row
    \li skip-runtime
    \li Do not build \l{QML Live Runtime}

\row
    \li skip-tests
    \li Do not build tests

\row
    \li static-link-runtime
    \li Produce a single QML Live Runtime executable binary. If this option is disabled,
        QML Live Runtime executable requires that the \c libqmllive dynamic library to
        be copied to the target.
\endtable

The following custom qmake variables are recognized:

\table
\header
    \li Custom Variable
    \li Description

\row
    \li PREFIX
    \li Installation prefix; defaults to \c{$$[QT_INSTALL_PREFIX]}.

\row
    \li EXAMPLES_PREFIX
    \li Installation prefix for examples; defaults to
        \c{$$[QT_INSTALL_EXAMPLES]/qmllive/examples}.

\row
    \li QMLLIVE_VERSION_EXTRA
    \li Distribution specific version description; white spaces are allowed.

\row
    \li QMLLIVE_REVISION
    \li The VCS revision number.

\row
    \li QMLLIVE_SETTINGS_VARIANT
    \li Overrides \c QCoreApplication::organizationName, which is used to determine
        application-specific \c QSettings storage.
\endtable


*/
